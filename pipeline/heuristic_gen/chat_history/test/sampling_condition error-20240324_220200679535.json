{"dataset": [{"lang": "java", "bug_type": "condition error", "buggy_code": "\nclass Solution {\n    public int nearestValidPoint(int x, int y, int[][] points) {\n        int minManh = Integer.MAX_VALUE;\n        int indMin = -1;\n        for (int i = 0; i < points.length; i++)\n        {\n            int tmpManh = Math.abs(x - points[i][0]) + Math.abs(y - points[i][1]);\n            if ((x == points[i][0] && y == points[i][1]) && (tmpManh < minManh))\n            {\n                minManh = tmpManh;\n                indMin = i;\n            }\n        }\n        return indMin;\n    }\n}\n", "reasoning": "\nChanged || (logical OR) to && (logical AND) in if conditions. It limits valid points.\n"}, {"lang": "cpp", "bug_type": "condition error", "buggy_code": "\nclass Solution {\npublic:\n\n    vector<int> mapping(string s)\n    {\n        vector<int> v(26, 0);\n        for (int i = 0; i < s.size(); i++)\n            v[s[i] - 'a']++;\n        return v;\n    }\n\n    int minSteps(string s, string t) {\n\n    vector<int> mapping1 = mapping(s);\n    vector<int> mapping2 = mapping(t);\n    int count = 0;\n    for (int i = 0; i < 26; i++)\n    {\n        int diff = 0;\n        if (mapping1[i] != 0)\n            diff = mapping1[i] - mapping2[i];\n        count += diff;\n    }\n    return count;\n        \n    }\n};\n", "reasoning": "\nThe code only calculates the diff when mapping1[i] > mapping2[i], neglecting the opposite case. \n"}, {"lang": "cpp", "bug_type": "condition error", "buggy_code": "\nclass Solution {\npublic:\n    string longestCommonPrefix(vector<string>& str) \n    {\n        sort(str.begin(), str.end()); //sorting the array\n        string ans=\"\"; //creating a new empty string to store the common prefixes\n        for(int i=0;i<str[0].length();i++) // max iterations = length of the first string\n        {\n            if(str[0][i]!=str[str.size()][i]) \n                break;\n            ans+=str[0][i]; // concatinate if the characters are matching\n        }\n        return ans;\n    }\n};\n", "reasoning": "\nAccessed str[str.size()] which is undefined and may cause a runtime error.\n"}], "heuristic": null}