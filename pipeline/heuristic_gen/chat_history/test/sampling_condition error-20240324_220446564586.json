{"dataset": [{"lang": "python3", "bug_type": "condition error", "buggy_code": "\nclass Solution:\n    def minDistance(self, word1: str, word2: str) -> int:\n        m=len(word1)\n        n=len(word2)\n        dp=[]\n        for i in range (m+1):\n            dp.append([0]*(n+1))\n        for i in range (m+1):\n            dp[i][0]=i\n        for i in range (n+1):\n            dp[0][i]=i\n        for i in range (1,m+1):\n            for j in range (1,n+1):\n                if word1[i]==word2[j]:\n                    dp[i][j]=dp[i-1][j-1]\n                else:\n                    dp[i][j]=min(dp[i][j-1],dp[i-1][j])+1\n        return dp[-1][-1]\n", "reasoning": "\nHere the indices i and j were supposed to be decreased by 1 when comparing characters from word1 and word2. So, the bug is we are using word1[i] and word2[j] instead of word1[i-1] and word2[j-1].\n"}, {"lang": "python3", "bug_type": "condition error", "buggy_code": "\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        s= ''.join(map(str,digits))\n        i=int(s)+1\n        if i<10:\n            li=[]\n        else:\n            li=list(map(int,str(i)))  \n        return li\n", "reasoning": "\nSpecifically, the bug handles all cases where number is less than 10 incorrectly by returning an empty list.\n"}, {"lang": "java", "bug_type": "condition error", "buggy_code": "\nclass Solution {\n    public int maxSum(int[][] grid) {\n        int max = -1, m = grid.length, n = grid[0].length;\n        for (int row = 0; row < m - 1; row++) {\n            for (int col = 0; col < n - 1; col++) {\n                int temp = grid[row][col] + grid[row][col + 1] + grid[row][col + 2];\n                temp += grid[row + 1][col + 1];\n                temp += grid[row + 2][col] + grid[row + 2][col + 1] + grid[row + 2][col + 2];\n                if (max < temp) {\n                    max = temp;\n                }\n            }\n        }\n        return max;\n    }\n}\n", "reasoning": "\nThe for loops are ending one index earlier, causing array out of bounds exception.\n"}], "heuristic": null}